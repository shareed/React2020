{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shan_\\\\Documents\\\\Web Development\\\\Notes\\\\React\\\\managing-forms2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shan_\\\\Documents\\\\Web Development\\\\Notes\\\\React\\\\managing-forms2\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Notes from \"./components/Notes\";\nimport NoteForm from \"./components/NoteForm\"; //mimic fetching data from an API\n\nimport data from \"./data\";\nimport \"./styles.scss\";\n\nfunction App() {\n  // all of our notes will live in state as 'notes'\n  // we are prepopulated a note inside of notes as a note object in [] set as initial state\n  const _useState = useState([{\n    id: 1,\n    title: \"Happy little quote\",\n    body: \"Talent is a pursued interest. Anything that you're willing to practice, you can do.― Bob Ross \"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1]; // Step 6: Create function that will update 'notes' with param values passed\n  // See v2 for a way to update notes without this function: https://codesandbox.io/s/form-management-42320-v2-pvw39?file=/src/index.js\n\n\n  const addNewNote = note => {\n    const newNote = {\n      id: Date.now(),\n      //unique id\n      title: note.title,\n      body: note.body\n    };\n    setNotes([...notes, newNote]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"My Notes\"), /*#__PURE__*/React.createElement(NoteForm, {\n    addNewNote: addNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Notes, {\n    notes: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/shan_/Documents/Web Development/Notes/React/managing-forms2/src/index.js"],"names":["React","useState","ReactDOM","Notes","NoteForm","data","App","id","title","body","notes","setNotes","addNewNote","note","newNote","Date","now","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,eAAP;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AAFa,oBAGaL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,IAAI,EACF;AAJJ,GADiC,CAAD,CAHrB;AAAA;AAAA,QAGNC,KAHM;AAAA,QAGCC,QAHD,kBAYb;AACA;;;AACA,QAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,UAAMC,OAAO,GAAG;AACdP,MAAAA,EAAE,EAAEQ,IAAI,CAACC,GAAL,EADU;AACE;AAChBR,MAAAA,KAAK,EAAEK,IAAI,CAACL,KAFE;AAGdC,MAAAA,IAAI,EAAEI,IAAI,CAACJ;AAHG,KAAhB;AAKAE,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,OAAX,CAAD,CAAR;AACD,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,MAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAjB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Notes from \"./components/Notes\";\nimport NoteForm from \"./components/NoteForm\";\n//mimic fetching data from an API\nimport data from \"./data\";\nimport \"./styles.scss\";\n\nfunction App() {\n  // all of our notes will live in state as 'notes'\n  // we are prepopulated a note inside of notes as a note object in [] set as initial state\n  const [notes, setNotes] = useState([\n    {\n      id: 1,\n      title: \"Happy little quote\",\n      body:\n        \"Talent is a pursued interest. Anything that you're willing to practice, you can do.― Bob Ross \"\n    }\n  ]);\n\n  // Step 6: Create function that will update 'notes' with param values passed\n  // See v2 for a way to update notes without this function: https://codesandbox.io/s/form-management-42320-v2-pvw39?file=/src/index.js\n  const addNewNote = note => {\n    const newNote = {\n      id: Date.now(), //unique id\n      title: note.title,\n      body: note.body\n    };\n    setNotes([...notes, newNote]);\n  };\n  return (\n    <div className=\"App\">\n      <h1>My Notes</h1>\n      {/* Step 7: Pass addNewNote as a prop into NoteForm */}\n      <NoteForm addNewNote={addNewNote} />\n      <Notes notes={notes} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}